# docker-compose -f docker-compose.kafka.yml up
version: '2.1'

networks:

  kafka:
    driver: bridge
    name: kafka

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "30m"

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    ports:
      - 127.0.0.1:9092:9092
    depends_on:
      - zookeeper
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "30m"

  kafka-setup:
    image: confluentinc/cp-kafka:5.3.1
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              cub kafka-ready -b kafka:29092 1 20 && \
              kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 3 --replication-factor 1 --topic urls.web  && \
              kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 3 --replication-factor 1 --topic scrapers.web  && \
              echo Topics are created‚è≥'"
    restart: on-failure
    depends_on:
      - kafka
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "30m"

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - 127.0.0.1:8000:9000
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    restart: on-failure
    depends_on:
      - kafka
    networks:
      - kafka
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "30m"
